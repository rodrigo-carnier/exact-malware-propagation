clear all;

initParam;
threshold = param.omega;

P0 = [param.init_susceptible_devs*(1-param.exposable);
      param.init_infected_devs*(1-param.exposable);
      param.init_susceptible_devs*param.exposable; 
      0;
      param.init_infected_devs*param.exposable]/param.n;

Pt(:,1:threshold) = zeros(5,threshold);
Pt(:,threshold+1) = P0;

i = threshold+1;

param
while i <= param.max_turns+threshold
% while i <= threshold+4

    i = 1+i;
    [Pt, Inf1, Inf2, Mit1, Mit2, Di, Ci] = markovs.MarkovChain2Seis(Pt, param.mcModel, param.n, param.alpha, param.beta, param.G, param.omega, i);
    D(i) = Di;
    C(i) = Ci;

end
Pt = Pt(:,1+threshold:end);

nameParam = strcat('2seis_mc_a', num2str(param.alpha*100),'_b',num2str(param.beta*100));
% nameParam = strcat(datestr(now,29), '_2seis_mc_a', num2str(param.alpha*100),'_b',num2str(param.beta*100),'_o',num2str(param.omega),'_fpr',num2str(param.FPR*100),'_g',num2str(param.G));

f = figure(83);
plot((0:param.max_turns)',100*(Pt(1,1:end)+Pt(3,1:end)), 'blue', 'LineWidth', 2)
hold on;
plot((0:param.max_turns)',100*Pt(4,1:end), 'color',[1 0.5 0], 'LineWidth', 2)
plot((0:param.max_turns)',100*(Pt(2,1:end)+Pt(5,1:end)), 'red', 'LineWidth', 2)
plot((0:param.max_turns)',100*Pt(2,1:end), 'color',[0 0.5 0], 'LineWidth', 2)
plot((0:param.max_turns)',100*Pt(5,1:end), 'black', 'LineWidth', 2)
hold off;
ytickformat('percentage');
axis([0 param.max_turns 0 100]);
legend('Susceptible', 'Exposed', 'Infected', 'Infected1', 'Infected2', 'Location', 'North');
title(strcat('2SEIS model (', param.mcModel, ') \alpha=', num2str(param.alpha), ', \beta=', num2str(param.beta)));
xlabel('Turn');
ylabel('Percentage of Devices');

savename = strcat(nameParam,'_',param.mcModel, '.mat');
save(savename)

exportgraphics(f,strcat(nameParam,'_',param.mcModel, '.png'), 'Resolution', 600);

%     
% long=param.max_turns+10;
% t_Markov=1:long;
% 
% S=zeros(size(t_Markov));
% E=zeros(size(t_Markov));
% I=zeros(size(t_Markov));
% R=zeros(size(t_Markov));
% D=zeros(size(t_Markov));
% N=zeros(size(t_Markov));
% 
% %%
% N(1:10) =   param.n*ones(1,10);
% %Initial condition
% I(1:9)  =   0;
% I(10)   =   param.Init_Inf1cted_Number;
% S(1:10) =   N(10)-I(10);
% 
%     
%            
% %%
% for i=10:(size(t_Markov,2)-1)
%     F1 = S(i)/N(1) - (S(i)/N(1))*((1-(param.alpha/N(1)))^(I(i)));
%     F2 = S(i-param.omega)/N(1) - (S(i-param.omega)/N(1))*((1-(param.alpha/N(1)))^(I(i-param.omega)));
%     
%     M1 = param.beta * (I(i)/N(1))*(1 + param.G*I(i)/N(1)*(1-param.beta));
%     M2 = param.beta * (I(i-param.tau)/N(1))*(1 + param.G*I(i-param.tau)/N(1)*(1-param.beta));
% 
% %     M11 = 1/param.G - (1/param.G)*(( 1 - param.beta*(param.G*(I(i)/N(1))/N(1)) )^((I(i)/N(1))*N(1)));
% %     M12 = (I(i)/N(1))-1/N(1) - ((I(i)/N(1))-1/N(1))*(( 1 - param.beta*(param.G*I(i)/N(1))/N(1)) )^((I(i)/N(1))*N(1));
% %     M1=M11+M12;
% %     M21 = 1/param.G - (1/param.G)*(( 1 - param.beta*(param.G*(I(i-param.tau)/N(1))/N(1)) )^((I(i-param.tau)/N(1))*N(1)));
% %     M22 = (I(i-param.tau)/N(1))-1/N(1) - ((I(i-param.tau)/N(1))-1/N(1))*(( 1 - param.beta*(param.G*I(i-param.tau)/N(1))/N(1)) )^((I(i-param.tau)/N(1))*N(1));
% %     M2=M21+M22;
% 
%     
%     S(1+i) = S(i) - F1*N(1) + M2*N(1);
%     E(1+i) = E(i) + F1*N(1) - F2*N(1);
%     I(1+i) = I(i) + F2*N(1) - param.epsilon * I(i)-M1*N(1);
%     R(1+i) = R(i) + M1*N(1) - M2*N(1);
%     D(1+i) = D(i) + param.epsilon* I(i);
%     
% 
% %     S(1+i) = S(i) - param.alpha * S(i) * I(i) / N(i) + param.beta * I(i-param.tau);
% %     E(1+i) = E(i) + param.alpha * S(i) * I(i) / N(i) - param.alpha * S(i-param.omega) * I(i-param.omega) / N(i-param.omega);
% %     I(1+i) = I(i) + param.alpha * S(i-param.omega) * I(i-param.omega) / N(i-param.omega) - (param.epsilon+param.beta) * I(i);
% %     R(1+i) = R(i) + param.beta  * I(i) - param.beta * I(i-param.tau);
% %     D(1+i) = D(i) + param.epsilon* I(i);
% 
%     N(1+i)=S(i) +I(i)   +R(i)   +E(i);
% end
% 
% %%
% S(1:9)=[];
% E(1:9)=[];
% I(1:9)=[];
% R(1:9)=[];
% D(1:9)=[];
% t_Markov=1:1:long-9;
% 
% f = figure();
% plot( t_Markov , S/param.n,'r','LineWidth', 2);
% hold on;
% plot( t_Markov , E/param.n,'b','LineWidth', 2);
% hold on;
% plot( t_Markov , I/param.n,'g','LineWidth', 2);
% hold on;
% plot( t_Markov , R/param.n,'k','LineWidth', 2);
% hold on;
% plot( t_Markov , D/param.n,'c','LineWidth', 2);
% hold off
% grid on;
% axis([0 param.max_turns 0 1]);
% xlabel('turn');
% ylabel('Proportion of Devices');
% legend('S','E','I','R','D');
% title('SEIRS-Delay Markov with Group Mitigation');
% 
% f = figure();
% plot( t_Markov , (report_mean(1:t,2)-S')/param.n,'r','LineWidth', 2);
% hold on;
% plot( t_Markov , (report_mean(1:t,3)-E')/param.n,'b','LineWidth', 2);
% hold on;
% plot( t_Markov , (report_mean(1:t,4)-I')/param.n,'g','LineWidth', 2);
% hold on;
% plot( t_Markov , (report_mean(1:t,5)-R')/param.n,'k','LineWidth', 2);
% hold on;
% plot( t_Markov , (report_mean(1:t,6)-D')/param.n,'c','LineWidth', 2);
% hold off
% grid on;
% xlim([0 param.max_turns]);
% xlabel('turn');
% ylabel('Error (%) ');
% legend('S','E','I','R','D');
% title('Error ( With Group Mitigation)');