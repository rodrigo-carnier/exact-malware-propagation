function [network, localGroup] = InitSisLocalNetwork(param)

% The matrix below represents the state of infection of all devices.
% Every column represents a device. The meaning of each line is:

% (1,:) Address of device. The add is a decimal number from 1 to n
% (2,:) Type of device.    1 - device is a normal IoT device. 999 - device is a honeypot.
% (3,:) Powered or not.    0 - device is turned off. 1 - device is turned on. -1 - device is turned off but will be reset next turn.
% (4,:) RAM Infected or not.   0 - not ROM infected. 1 - devices's RAM is infected.
% (5,:) ROM Infected or not.   0 - not ROM infected. 1 - devices's ROM is infected.
% (6,:) Number of the group (of 50 devices) to which this device belongs.

network = ones(5,param.n);
network(1,:) = 1:param.n;
network(4,:) = zeros(1,param.n);
network(5,:) = zeros(1,param.n);
network(6,:) = zeros(1,param.n);

localGroup = zeros(param.localGroup,2);

for i=1:param.localGroup
    localGroup(i,1) = (i-1)*param.n_local + 1;
    localGroup(i,2) = i*param.n_local;
    network(6,localGroup(i,1):localGroup(i,2)) = i;
end

network(6,(localGroup(i,2)+1):end) = i;
localGroup(i,2) = network(1,end);

% In next lines, I initialize the honeypots
startAdd = param.n/(param.n*param.hp);
i = 1;
while (i <= param.n_hp) || (j < param.n)
   network(2:5,floor(i*startAdd)) = 999;
   i = i+1;
   j = floor(i*startAdd);
end
% size(network)

end