clear all

%% Parameters

days = 7;
turns = 60 * 24 * days;

n = 100;                % number of devices
hp = 0.1;               % percentage of devices which are honeypots
n_hp = round(hp*n);     % number of honeypots

IR = 1;                 % Infection Rate: percentage of chance of infection when infected device sends packet to non-infected device
% IR = 0.95;                 % Infection Rate: percentage of chance of infection when infected device sends packet to non-infected device
% IR = 0.9;                 % Infection Rate: percentage of chance of infection when infected device sends packet to non-infected device
% IR = 0.5;                 % Infection Rate: percentage of chance of infection when infected device sends packet to non-infected device

% DR = 1;                 % Detection Rate: rate of success of malware detection when honeypot receives packet from infected unit
DR = 0.9;               % Detection Rate: rate of success of malware detection when honeypot receives packet from infected unit
% DR = 0.8;               % Detection Rate: rate of success of malware detection when honeypot receives packet from infected unit

% FPR = 0.01;             % false positives rate

clean_packets = 1;          % how many packets are sent by each clean device to a random device every turn
agressiveness = 1;          % if the device is infected, this is the factor of increase of packets sent per turn (infection is communicating more)
infected_packets = clean_packets*agressiveness; % how many packets are sent by each infected device to a random device every turn

server_T = 10;
server_on = true;

%% Network matrix

% The matrix below represents the state of infection of all devices.
% Every line represents a device. The meaning of each column is:

% (:,1) Type of device.  0 - device is a normal IoT device. -111 - device is a honeypot.
% (:,2) Powered or not.  0 - device is turned off. 1 - device is turned on.
% (:,3) Infected or not. 0 - device is clean. 1 - devices's RAM is infected. 2 device's ROM is infected

network = zeros(n,3);
network(:,2) = ones(n,1);

startAdd = round(100*hp/2);
for i=1:n_hp
   network(startAdd + (i-1)*round(100*hp),1) = -111;
end



%% Create first cases of contamination (one random device for each type of infection)

% Start network with one random device with infected RAM
firstRAM = simultools.GetNormalDevice(network, n);
network(firstRAM,3) = 1;

% Start network with one random device with infected ROM
firstROM = simultools.GetNormalDevice(network, n);
network(firstROM,3) = 2;

%% Display first network state
network

%% Reports

reports = zeros(turns,8);

% The matrix below is a report generated every turn about the situation of
% the network in terms of infection, device on or off.
% Every line represents a turn. The meaning of each column is:

% (:,1) How many devices are clean
% (:,2) How many devices have infected RAM
% (:,3) How many devices have infected ROM
% (:,4) How many devices are on
% (:,5) How many devices are off
% (:,6) How many devices did not suffer any server action
% (:,7) How many devices were reset by server
% (:,8) How many devices were shutdown by server

% (:,9) How many RANGES of devices were reset by server
% (:,10) How many RANGES of devices were shutdown by server

% 
%% Simulation

% 
% for t=1:turns
%    
%     
%     for add=1:n
%         
%         if network(
%         receiver_add = GetOtherDevice(n,add);
%         SendAndProcessPacket(network,n)
%         
%     end
%     
%    if server_on 
%        CleanInfections(network,hp_reports)
%    end
% end