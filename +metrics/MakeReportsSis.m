function report_total = MakeReports(report_total, network, param, t)

% % % report_total

% (:,1) Turn
% (:,2) How many devices are clean
% (:,3) How many devices have SIS infection
% (:,4) How many devices have SIQ infection active (are infected and turned on)
% (:,5) How many devices have SIQ infection neutralized (are infected and turned off)
% (:,6) How many devices are on
% (:,7) How many devices are off
% (:,8) How many devices are resetting


% % % network

% (1,:) Address of device. The add is a decimal number from 1 to n
% (2,:) Powered or not.    0 - device is turned off. 1 - device is turned on. -1 - device is turned off but will be reset next turn.
% (3,:) SIS Infected or not.   0 - not SIQ infected. 1 - devices's SIS is infected.
% (4,:) SIQ Infected or not.   0 - not SIQ infected. 1 - devices's SIQ is infected.


report_total(t+1,1) = t;

% report_total(t+1,2) = param.n -sum(network(4,:)==1) -sum((network(3,:)-network(4,:))==1);

switch(param.malware)
    case 'SIS'
        report_total(t+1,2) = sum(network(3,:)==0);
    case 'SIQ'
        report_total(t+1,2) = sum(network(4,:)==0);
end

report_total(t+1,3) = sum(network(3,:)==1);

report_total(t+1,4) = sum((network(2,:)+network(4,:))==2);

report_total(t+1,5) = sum(network(4,:)==1) - sum((network(2,:)+network(4,:))==2);

report_total(t+1,6) = sum(network(2,:)==1);

report_total(t+1,7) = sum(network(2,:)==0);

report_total(t+1,8) = sum(network(2,:)==-1);

end