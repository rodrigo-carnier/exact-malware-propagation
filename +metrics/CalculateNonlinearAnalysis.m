function [RMSE, MAX, If, Tcte] = CalculateNonlinearAnalysis%(turn_analysis)

% clearvars -except turn_analysis;

initParam;
switch param.malware
    case 'SIS'

        load(strcat('sis_mc',num2str(param.alpha*100),num2str(param.beta*100), '_', num2str(param.G),'_standard.mat'));
        data_std = Pt';
        
        load(strcat('sis_sim',num2str(param.alpha*100),num2str(param.beta*100), '_', num2str(param.G),'.mat'));
        data_sim_repeat = report_total;
        data_sim_repeat(:,2:end) = data_sim_repeat(:,2:end)/param.n;
        
        load(strcat('sis_sim', num2str(param.alpha*100),num2str(param.beta*100), '_', num2str(param.G),'nonrepeat.mat'));
        data_sim_nonrepeat = report_total;
        data_sim_nonrepeat(:,2:end) = data_sim_nonrepeat(:,2:end)/param.n;
        
        time = report_total(:,1);
        
        error_Infected_repeat = data_std(:,2) - data_sim_repeat(:,3);
        error_Infected_nonrepeat = data_std(:,2) - data_sim_nonrepeat(:,3);
        
        RMSE(1) = sqrt(mean((error_Infected_repeat).^2));
        RMSE(2) = sqrt(mean((error_Infected_nonrepeat).^2));
        MAX(1)=max(abs(error_Infected_repeat));
        MAX(2)=max(abs(error_Infected_nonrepeat));

        If(1) = data_std(end,2);
        If(2) = data_sim_repeat(end,3);
        If(3) = data_sim_nonrepeat(end,3);
        delta(1) = data_std(end,2)-data_std(1,2);
        delta(2) = data_sim_repeat(end,3)-data_sim_repeat(1,3);
        delta(3) = data_sim_nonrepeat(end,3)-data_sim_nonrepeat(1,3);
        signal(1) = delta(1)/abs(delta(1));
        signal(2) = delta(2)/abs(delta(2));
        signal(3) = delta(3)/abs(delta(3));
        signal(1)
        signal(2)
        signal(3)
        
%         if param.beta>=0.25
%             switch(signal)
%                 case -1
%                     disp('test0')
%                     Tcte_vec = find(data_mc(:,2)<=0.05);
%                 case 1
%                     disp('test1')
%                     Tcte_vec = find(data_mc(:,2)>=0.95);
%             end
%         else
%             switch(signal)
%                 case -1
%                     disp('test10')
%                     data_mc(end,2)
%                     Tcte_vec = find(data_mc(:,2)<=0.05*data_mc(end,2));
%                 case 1
%                     disp('test11')
%                     data_mc(end,2)
%                     0.95*data_mc(end,2)
%                     Tcte_vec = find(data_mc(:,2)>=0.95*data_mc(end,2));
%             end
%         end

%         Tcte_vec = find(data_mc(:,2)>=0.95*0.33333333);
        Tcte_vec = find(data_std(:,2) >= (data_std(1,2) + 0.95*delta(1)) );
        Tcte(1) = Tcte_vec(1);
        
        Tcte_vec = find(data_sim_repeat(:,3) >= (data_sim_repeat(1,3) + 0.95*delta(2)) );
        Tcte(2) = Tcte_vec(1);
        
        Tcte_vec = find(data_sim_nonrepeat(:,3) >= (data_sim_nonrepeat(1,3) + 0.95*delta(3)) );
        Tcte(3) = Tcte_vec(1);
        
%         figure(28);
% %         figure
% %         plot(time, error_Clean, 'LineWidth', 2);
% %         hold on
%         plot(time, error_Infected, 'LineWidth', 2);
% %         hold off
%         % axis([0 1 0 1]);
% %         axis([0 param.max_turns -0.01 0.01]);
%         legend('Infected Error', 'Location', 'North');
%         title('Error: Sim X Markov Chain (Only Infection)');
%         xlabel('Time(s)');
%         ylabel('Percentage of Devices');
% %         print('-djpeg90','-r300',strcat(datestr(now,29),'_error_',param.malware,'_',num2str(param.alpha*100),num2str(param.beta*100), '_', num2str(param.G)));


        savename = strcat('Nonlinearanalysis_',num2str(param.alpha*100),num2str(param.beta*100),'_',num2str(param.G),'_',param.mcModel,'.mat');
        save(savename);
        
    case 'siq'
        namesim = strcat('siq_sim',strcat(num2str(param.alpha*100),num2str(param.beta*100), '_', num2str(param.G)));
        namemc = strcat('siq_mc',strcat(num2str(param.alpha*100),num2str(param.beta*100), '_', num2str(param.G)));
        load(namesim);
        load(namemc);
        
        time = report_total(1:t,1);
        data_sim = report_total/param.n;
        data_mc = Pt';

        error_Clean = data_sim(1:t,2)-data_mc(1:t,1);
        error_Infectious = data_sim(1:t,4)-data_mc(1:t,2);
        error_Neutralized = data_sim(1:t,5)-data_mc(1:t,3);

        figure(28);
        % figure
        plot(time, error_Clean, 'LineWidth', 2);
        hold on
        plot(time, error_Infectious, 'LineWidth', 2);
        plot(time, error_Neutralized, 'LineWidth', 2);
        hold off
        % % axis([0 1 0 1]);
        axis([0 param.max_turns -0.0025 0.0025]);
        legend('Clean','Infectious','Neutralized', 'Location', 'North');
        title('Error between Simulation and Model Prediction');
        xlabel('Time(s)');
        ylabel('Percentage of Devices');
        print('-djpeg90','-r300',strcat(datestr(now,29),'_error_',param.malware,'_',num2str(param.alpha*100),num2str(param.beta*100), '_', num2str(param.G)));
end


end