function [data_sim, data_mc] = PlotErrors(alpha, beta, G, param)
% clear all;
% 
% initParam;

switch param.malware
    case 'SIS'
        namesim = strcat('SIS_sim', num2str(alpha*100), num2str(beta*100), '_', num2str(G),'.mat')
        namemc = strcat('SIS_mc', num2str(alpha*100), num2str(beta*100), '_', num2str(G), '_', param.mcModel, '.mat')
        load(namesim);
        load(namemc);
        
        data_sim = report_total;
        data_sim(:,2:end) = data_sim(:,2:end)/param.n;
        data_mc = Pt';

        error_Clean = data_sim(:,2)-data_mc(:,1);
        error_Infected = data_sim(:,3)-data_mc(:,2);

        error_Infected
        
        savename = strcat('SIS_error_',strcat(num2str(alpha*100),num2str(beta*100),'_',num2str(G)),'_', param.mcModel,'.mat');
        save(savename);
        
        switch param.mcModel
            case 'proposed'
                figure(81);
                % figure
                plot((0:param.max_turns)', 100*error_Clean, 'LineWidth', 2);
                hold on;
                plot((0:param.max_turns)', 100*error_Infected, 'LineWidth', 2);
                hold off;
                ytickformat('percentage');
                legend('Susceptible Error','Infected Error', 'Location', 'North');
                title('Error: Simulation X Proposed Exact Markov Chain');
                xlabel('Turn');
                ylabel('Percentage of Devices');
                print('-djpeg90','-r300',strcat(datestr(now,29),'_error_',param.mcModel,'_',param.malware,'_',num2str(alpha*100),num2str(beta*100), '_', num2str(G),'.jpg'));

            case 'standard'
                figure(82);
                % figure
                plot((0:param.max_turns)', 100*error_Clean, 'LineWidth', 2);
                hold on;
                plot((0:param.max_turns)', 100*error_Infected, 'LineWidth', 2);
                hold off;
                ytickformat('percentage');
                legend('Susceptible Error','Infected Error', 'Location', 'North');
                title('Error: Simulation X Standard Nonlinear Markov Chain');
                xlabel('Turn');
                ylabel('Percentage of Devices');
                print('-djpeg90','-r300',strcat(datestr(now,29),'_error_',param.mcModel,'_',param.malware,'_',num2str(alpha*100),num2str(beta*100), '_', num2str(G),'.jpg'));
            
            case 'linear'
                figure(83);
                % figure
                plot((0:param.max_turns)', 100*error_Clean, 'LineWidth', 2);
                hold on;
                plot((0:param.max_turns)', 100*error_Infected, 'LineWidth', 2);
                hold off;
                ytickformat('percentage');
                legend('Susceptible Error','Infected Error', 'Location', 'North');
                title('Error: Simulation X Linear Markov Chain');
                xlabel('Turn');
                ylabel('Percentage of Devices');
                print('-djpeg90','-r300',strcat(datestr(now,29),'_error_',param.mcModel,'_',param.malware,'_',num2str(alpha*100),num2str(beta*100), '_', num2str(G),'.jpg'));
                
            case 'onlyInfection'
                figure(84);
                % figure
                plot((0:param.max_turns)', 100*error_Clean, 'LineWidth', 2);
                hold on;
                plot((0:param.max_turns)', 100*error_Infected, 'LineWidth', 2);
                hold off;
                ytickformat('percentage');
                legend('Susceptible Error','Infected Error', 'Location', 'North');
                title('Error: Simulation X Proposed Markov Chain (Only Infection)');
                xlabel('Turn');
                ylabel('Percentage of Devices');
                print('-djpeg90','-r300',strcat(datestr(now,29),'_error_',param.mcModel,'_',param.malware,'_',num2str(alpha*100),num2str(beta*100), '_', num2str(G),'.jpg'));
                
            case 'onlyMitigation'
                figure(85);
                % figure
                plot((0:param.max_turns)', 100*error_Clean, 'LineWidth', 2);
                hold on;
                plot((0:param.max_turns)', 100*error_Infected, 'LineWidth', 2);
                hold off;
                ytickformat('percentage');
                legend('Susceptible Error','Infected Error', 'Location', 'North');
                title('Error: Simulation X Proposed Markov Chain (Only Mitigation)');
                xlabel('Turn');
                ylabel('Percentage of Devices');
                print('-djpeg90','-r300',strcat(datestr(now,29),'_error_',param.mcModel,'_',param.malware,'_',num2str(alpha*100),num2str(beta*100), '_', num2str(G),'.jpg'));
                
            case 'combinatory3rd'
                figure(86);
                % figure
                plot((0:param.max_turns)', 100*error_Clean, 'LineWidth', 2);
                hold on;
                plot((0:param.max_turns)', 100*error_Infected, 'LineWidth', 2);
                hold off;
                ytickformat('percentage');
                legend('Susceptible Error','Infected Error', 'Location', 'North');
                title('Error: Simulation X Approx. of Proposed Markov Chain');
                xlabel('Turn');
                ylabel('Percentage of Devices');
                print('-djpeg90','-r300',strcat(datestr(now,29),'_error_',param.mcModel,'_',param.malware,'_',num2str(alpha*100),num2str(beta*100), '_', num2str(G),'.jpg'));
                
            case 'standardmod'
                figure(87);
                % figure
                plot((0:param.max_turns)', 100*error_Clean, 'LineWidth', 2);
                hold on;
                plot((0:param.max_turns)', 100*error_Infected, 'LineWidth', 2);
                hold off;
                ytickformat('percentage');
                legend('Susceptible Error','Infected Error', 'Location', 'North');
                title('Error: Simulation X Exact Bifunction Markov Chain');
                xlabel('Turn');
                ylabel('Percentage of Devices');
                print('-djpeg90','-r300',strcat(datestr(now,29),'_error_',param.mcModel,'_',param.malware,'_',num2str(alpha*100),num2str(beta*100), '_', num2str(G),'.jpg'));
        end
        
    case 'SIQ'
        namesim = strcat('SIQ_sim',strcat(num2str(alpha*100),num2str(beta*100), '_', num2str(G)));
        namemc = strcat('SIQ_mc',strcat(num2str(alpha*100),num2str(beta*100), '_', num2str(G)));
        load(namesim);
        load(namemc);
        
        time = report_total(1:t,1);
        data_sim = report_total/param.n;
        data_mc = Pt';

        error_Clean = data_sim(1:t,2)-data_mc(1:t,1);
        error_Infectious = data_sim(1:t,4)-data_mc(1:t,2);
        error_Neutralized = data_sim(1:t,5)-data_mc(1:t,3);

        figure(28);
        % figure
        plot(time, error_Clean, 'LineWidth', 2);
        hold on;
        plot(time, error_Infectious, 'LineWidth', 2);
        plot(time, error_Neutralized, 'LineWidth', 2);
        hold off;
        % % axis([0 1 0 1]);
        axis([0 param.max_turns -0.0025 0.0025]);
        legend('Clean','Infectious','Neutralized', 'Location', 'North');
        title('Error between Simulation and Model Prediction');
        xlabel('Turn');
        ylabel('Percentage of Devices');
        print('-djpeg90','-r300',strcat(datestr(now,29),'_error_',param.malware,'_',num2str(alpha*100),num2str(beta*100), '_', num2str(G),'.jpg'));
end


end